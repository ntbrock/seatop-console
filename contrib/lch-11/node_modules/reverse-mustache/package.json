{
  "name": "reverse-mustache",
  "description": "Reverse templating library for mustache, generating variables from a template's output",
  "version": "1.6.2",
  "homepage": "https://github.com/twolfson/reverse-mustache",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/reverse-mustache.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/reverse-mustache/issues"
  },
  "licenses": [
    {
      "type": "UNLICENSE",
      "url": "https://github.com/twolfson/reverse-mustache/blob/master/UNLICENSE"
    }
  ],
  "main": "lib/reverse-mustache",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "mustache": "~0.8.1",
    "clone": "~0.1.11",
    "pathval": "~0.1.1"
  },
  "devDependencies": {
    "mocha": "~1.11.0",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.4.0",
    "chai": "~1.9.1"
  },
  "keywords": [
    "mustache",
    "reverse template",
    "reverse mustache",
    "inverse template"
  ],
  "readme": "# reverse-mustache [![Build status](https://travis-ci.org/twolfson/reverse-mustache.png?branch=master)](https://travis-ci.org/twolfson/reverse-mustache)\n\nReverse templating library for [mustache][], generating variables from a template's output\n\nThis was created to explore the untapped reverse templating domain. It was initially inspired by [@laktek's `extract-values` library][extract-values].\n\n[mustache]: https://github.com/janl/mustache.js\n[extract-values]: http://www.laktek.com/2012/10/04/extract-values-from-a-string/\n\n```js\nreverseMustache({\n  template: 'hello {{#place}}world{{/place}}',\n  content: 'hello world'\n});\n// {world: true}\n```\n\n## Getting Started\nInstall the module with: `npm install reverse-mustache`\n\n```javascript\nvar reverseMustache = require('reverse-mustache');\nreverseMustache({\n  template: 'hello {{#place}}world{{/place}}',\n  content: 'hello world'\n});\n/*\n{\n  place: true\n}\n*/\n```\n\n## Documentation\n**Foreword**: The current implementation is quick and dirty to see if the project was possible.\n\n`reverse-mustache` exposes the `reverseMustache` function as its `module.exports`.\n\n### `reverseMustache(params)`\nReverse template output into its original variables\n\n- params `Object`, container for function parameters\n  - template `String`, template used to generate output\n  - content `String`, output to reverse/extract variables from\n  - partials `Object|Function`, container or function that returns partial templates\n      - More info: https://github.com/janl/mustache.js/tree/0.8.1#partials\n  - tags `String[]`, 2 item array containing opening and closing tags\n      - More info: https://github.com/janl/mustache.js/tree/0.8.1#set-delimiter\n\n**Returns**:\n\nIf `reverseMustache` cannot resolve variables that match the output, then it will return `null`.\n\nIf the match is successful, it will return an object `context`.\n\n- context `Object`, container for state of template\n  - tokensByName `Object`, key-value pairs representing original data\n  - We are skipping over other variables which may change later on\n\n### Functionality\n```\n[x] Reverse text nodes\n[x] Reverse boolean conditionals\n[x] Reverse escaped variables\n[x] Reverse unescaped variables\n[x] Reverse for loops\n[x] Re-use variables / prevent contradictions\n[x] Reverse nested objects/nested paths\n[x] Reverse inverted conditionals\n[x] Handle comments\n[x] Handle partials\n[x] Handle alternative open/close tags\n```\n\n## Examples\nBelow are some examples of using `reverseMustache`\n\n### Variables\nThis is an example where we have a variable in our template\n\n```js\nreverseMustache({\n  template: 'hello {{place}}',\n  content: 'hello moon'\n});\n// {place: 'moon'}\n```\n\n### Partials\nThis is an example using an object containing partials\n\n```js\nreverseMustache({\n  template: 'hello {{> place}}',\n  content: 'hello moon'\n  partials: {\n    place: '{{name}}'\n  }\n});\n// {place: {name: 'moon'}}\n```\n\n### Tags\nThis is an example using an alternative open/close tags\n\n```js\nreverseMustache({\n  template: 'hello <%=place%>',\n  content: 'hello moon'\n});\n// {place: 'moon'}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson/\n\n## Unlicense\nAs of Mar 23 2014, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n",
  "readmeFilename": "README.md",
  "_id": "reverse-mustache@1.6.2",
  "_from": "reverse-mustache@"
}
